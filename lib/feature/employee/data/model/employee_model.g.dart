// GENERATED CODE - DO NOT MODIFY BY HAND

part of 'employee_model.dart';

// **************************************************************************
// JsonSerializableGenerator
// **************************************************************************

EmployeeModel _$EmployeeModelFromJson(Map<String, dynamic> json) =>
    EmployeeModel(
      id: (json['id'] as num?)?.toInt(),
      degreeId: (json['degreeId'] as num?)?.toInt(),
      jobbadalat: (json['jobbadalat'] as num?)?.toDouble(),
      jobId: (json['jobId'] as num?)?.toInt(),
      symble: json['symble'] as String?,
      partId: (json['partId'] as num?)?.toInt(),
      datJob: json['datJob'] as String?,
      datJobGo: json['datJobGo'] as String?,
      name: json['name'] as String?,
      nationId: (json['nationId'] as num?)?.toInt(),
      cardId: json['cardId'] as String?,
      bok: json['bok'] as String?,
      bokPlace: json['bokPlace'] as String?,
      datBok: json['datBok'] as String?,
      datBokGo: json['datBokGo'] as String?,
      datBirth: json['datBirth'] as String?,
      datBirthGo: json['datBirthGo'] as String?,
      birthPlace: json['birthPlace'] as String?,
      datWork: json['datWork'] as String?,
      datWorkGo: json['datWorkGo'] as String?,
      education: json['education'] as String?,
      educationName: json['educationName'] as String?,
      datEducation: json['datEducation'] as String?,
      datEducationGo: json['datEducationGo'] as String?,
      address: json['address'] as String?,
      phone: json['phone'] as String?,
      workJob: json['workJob'] as String?,
      empType: json['empType'] as String?,
      fia: json['fia'] as String?,
      draga: (json['draga'] as num?)?.toDouble(),
      salary: (json['salary'] as num?)?.toDouble(),
      naqlBadal: (json['naqlBadal'] as num?)?.toDouble(),
      takenHolidays: (json['takenHolidays'] as num?)?.toInt(),
      jobNo: (json['jobNo'] as num?)?.toInt(),
      elawa: (json['elawa'] as num?)?.toDouble(),
      inEntedabBadal: (json['inEntedabBadal'] as num?)?.toDouble(),
      outEntedabBadal: (json['outEntedabBadal'] as num?)?.toDouble(),
      jobState: json['jobState'] as String?,
      akdNo: json['akdNo'] as String?,
      datAkdBegin: json['datAkdBegin'] as String?,
      datAkdEnd: json['datAkdEnd'] as String?,
      akdEndService: json['akdEndService'] as String?,
      cardNo: (json['cardNo'] as num?)?.toInt(),
      cardStart: json['cardStart'] as String?,
      cardJob: json['cardJob'] as String?,
      datQard: json['datQard'] as String?,
      qardMony: (json['qardMony'] as num?)?.toInt(),
      qardQest: (json['qardQest'] as num?)?.toInt(),
      computerName: json['computerName'] as String?,
      computerUser: json['computerUser'] as String?,
      programUser: json['programUser'] as String?,
      inDate: json['inDate'] as String?,
      bankId: json['bankId'] as String?,
      accountNo: json['accountNo'] as String?,
      quick: (json['quick'] as num?)?.toDouble(),
      salary1: (json['salary1'] as num?)?.toInt(),
      maeesha: (json['maeesha'] as num?)?.toDouble(),
      datTahweel: json['datTahweel'] as String?,
      taka3odM: (json['taka3odM'] as num?)?.toDouble(),
      previous: (json['previous'] as num?)?.toDouble(),
      cardCount: (json['cardCount'] as num?)?.toDouble(),
      passportId: json['passportId'] as String?,
      nadafa: (json['nadafa'] as num?)?.toDouble(),
      datTykeed: json['datTykeed'] as String?,
      datEndGo: json['datEndGo'] as String?,
      badal1: (json['badal1'] as num?)?.toInt(),
      badal2: (json['badal2'] as num?)?.toInt(),
      badal3: (json['badal3'] as num?)?.toInt(),
      badal4: (json['badal4'] as num?)?.toInt(),
      hasm1: (json['hasm1'] as num?)?.toInt(),
      hasm2: (json['hasm2'] as num?)?.toInt(),
      isHasm3: (json['isHasm3'] as num?)?.toInt(),
      userIdM: json['userIdM'] as String?,
      machineNumber: (json['machineNumber'] as num?)?.toInt(),
      dmobashrag: json['dmobashrag'] as String?,
      dmobashrah: json['dmobashrah'] as String?,
      ibanNum: json['ibanNum'] as String?,
      dissent: (json['dissent'] as num?)?.toDouble(),
      akdNoTasleef: json['akdNoTasleef'] as String?,
      datStartTasleef: json['datStartTasleef'] as String?,
      datEndTasleef: json['datEndTasleef'] as String?,
      qestTasleef: (json['qestTasleef'] as num?)?.toInt(),
      moneyTasleef: (json['moneyTasleef'] as num?)?.toInt(),
      sandok: (json['sandok'] as num?)?.toDouble(),
      akdNoSandok: json['akdNoSandok'] as String?,
      datStartSandok: json['datStartSandok'] as String?,
      datEndSandok: json['datEndSandok'] as String?,
      qestSandok: (json['qestSandok'] as num?)?.toInt(),
      moneySandok: (json['moneySandok'] as num?)?.toInt(),
      zeraee: (json['zeraee'] as num?)?.toDouble(),
      akdNoZeraee: json['akdNoZeraee'] as String?,
      datStartZeraee: json['datStartZeraee'] as String?,
      datEndZeraee: json['datEndZeraee'] as String?,
      qestZeraee: (json['qestZeraee'] as num?)?.toInt(),
      moneyZeraee: (json['moneyZeraee'] as num?)?.toInt(),
    );

Map<String, dynamic> _$EmployeeModelToJson(EmployeeModel instance) =>
    <String, dynamic>{
      'id': instance.id,
      'degreeId': instance.degreeId,
      'jobbadalat': instance.jobbadalat,
      'jobId': instance.jobId,
      'symble': instance.symble,
      'partId': instance.partId,
      'datJob': instance.datJob,
      'datJobGo': instance.datJobGo,
      'name': instance.name,
      'nationId': instance.nationId,
      'cardId': instance.cardId,
      'bok': instance.bok,
      'bokPlace': instance.bokPlace,
      'datBok': instance.datBok,
      'datBokGo': instance.datBokGo,
      'datBirth': instance.datBirth,
      'datBirthGo': instance.datBirthGo,
      'birthPlace': instance.birthPlace,
      'datWork': instance.datWork,
      'datWorkGo': instance.datWorkGo,
      'education': instance.education,
      'educationName': instance.educationName,
      'datEducation': instance.datEducation,
      'datEducationGo': instance.datEducationGo,
      'address': instance.address,
      'phone': instance.phone,
      'workJob': instance.workJob,
      'empType': instance.empType,
      'fia': instance.fia,
      'draga': instance.draga,
      'salary': instance.salary,
      'naqlBadal': instance.naqlBadal,
      'takenHolidays': instance.takenHolidays,
      'jobNo': instance.jobNo,
      'elawa': instance.elawa,
      'inEntedabBadal': instance.inEntedabBadal,
      'outEntedabBadal': instance.outEntedabBadal,
      'jobState': instance.jobState,
      'akdNo': instance.akdNo,
      'datAkdBegin': instance.datAkdBegin,
      'datAkdEnd': instance.datAkdEnd,
      'akdEndService': instance.akdEndService,
      'cardNo': instance.cardNo,
      'cardStart': instance.cardStart,
      'cardJob': instance.cardJob,
      'datQard': instance.datQard,
      'qardMony': instance.qardMony,
      'qardQest': instance.qardQest,
      'computerName': instance.computerName,
      'computerUser': instance.computerUser,
      'programUser': instance.programUser,
      'inDate': instance.inDate,
      'bankId': instance.bankId,
      'accountNo': instance.accountNo,
      'quick': instance.quick,
      'salary1': instance.salary1,
      'maeesha': instance.maeesha,
      'datTahweel': instance.datTahweel,
      'taka3odM': instance.taka3odM,
      'previous': instance.previous,
      'cardCount': instance.cardCount,
      'passportId': instance.passportId,
      'nadafa': instance.nadafa,
      'datTykeed': instance.datTykeed,
      'datEndGo': instance.datEndGo,
      'badal1': instance.badal1,
      'badal2': instance.badal2,
      'badal3': instance.badal3,
      'badal4': instance.badal4,
      'hasm1': instance.hasm1,
      'hasm2': instance.hasm2,
      'isHasm3': instance.isHasm3,
      'userIdM': instance.userIdM,
      'machineNumber': instance.machineNumber,
      'dmobashrag': instance.dmobashrag,
      'dmobashrah': instance.dmobashrah,
      'ibanNum': instance.ibanNum,
      'dissent': instance.dissent,
      'akdNoTasleef': instance.akdNoTasleef,
      'datStartTasleef': instance.datStartTasleef,
      'datEndTasleef': instance.datEndTasleef,
      'qestTasleef': instance.qestTasleef,
      'moneyTasleef': instance.moneyTasleef,
      'sandok': instance.sandok,
      'akdNoSandok': instance.akdNoSandok,
      'datStartSandok': instance.datStartSandok,
      'datEndSandok': instance.datEndSandok,
      'qestSandok': instance.qestSandok,
      'moneySandok': instance.moneySandok,
      'zeraee': instance.zeraee,
      'akdNoZeraee': instance.akdNoZeraee,
      'datStartZeraee': instance.datStartZeraee,
      'datEndZeraee': instance.datEndZeraee,
      'qestZeraee': instance.qestZeraee,
      'moneyZeraee': instance.moneyZeraee,
    };

EmployeeSearchModel _$EmployeeSearchModelFromJson(Map<String, dynamic> json) =>
    EmployeeSearchModel(
      id: (json['id'] as num?)?.toInt(),
      name: json['name'] as String?,
      cardId: json['cardId'] as String?,
      jobId: (json['jobId'] as num?)?.toInt(),
      jobName: json['jobName'] as String?,
      partId: (json['partId'] as num?)?.toInt(),
      partName: json['partName'] as String?,
      fia: json['fia'] as String?,
      salary: (json['salary'] as num?)?.toDouble(),
      draga: (json['draga'] as num?)?.toDouble(),
      jobState: json['jobState'] as String?,
      workJob: json['workJob'] as String?,
    );

Map<String, dynamic> _$EmployeeSearchModelToJson(
        EmployeeSearchModel instance) =>
    <String, dynamic>{
      'id': instance.id,
      'name': instance.name,
      'cardId': instance.cardId,
      'jobId': instance.jobId,
      'jobName': instance.jobName,
      'partId': instance.partId,
      'partName': instance.partName,
      'fia': instance.fia,
      'salary': instance.salary,
      'draga': instance.draga,
      'jobState': instance.jobState,
      'workJob': instance.workJob,
    };

EmployeeReportModel _$EmployeeReportModelFromJson(Map<String, dynamic> json) =>
    EmployeeReportModel(
      id: (json['id'] as num?)?.toInt(),
      name: json['name'] as String?,
      partName: json['partName'] as String?,
      fia: json['fia'] as String?,
      jobNo: (json['jobNo'] as num?)?.toInt(),
      draga: (json['draga'] as num?)?.toDouble(),
      jobName: json['jobName'] as String?,
      jobState: json['jobState'] as String?,
      cardId: json['cardId'] as String?,
      bok: json['bok'] as String?,
      datBok: json['datBok'] as String?,
      datWork: json['datWork'] as String?,
      datJob: json['datJob'] as String?,
      education: json['education'] as String?,
      salary: (json['salary'] as num?)?.toDouble(),
    );

Map<String, dynamic> _$EmployeeReportModelToJson(
        EmployeeReportModel instance) =>
    <String, dynamic>{
      'id': instance.id,
      'name': instance.name,
      'partName': instance.partName,
      'fia': instance.fia,
      'jobNo': instance.jobNo,
      'draga': instance.draga,
      'jobName': instance.jobName,
      'jobState': instance.jobState,
      'cardId': instance.cardId,
      'bok': instance.bok,
      'datBok': instance.datBok,
      'datWork': instance.datWork,
      'datJob': instance.datJob,
      'education': instance.education,
      'salary': instance.salary,
    };

EmployeeFindModel _$EmployeeFindModelFromJson(Map<String, dynamic> json) =>
    EmployeeFindModel(
      id: (json['id'] as num?)?.toInt(),
      name: json['name'] as String?,
      fia: json['fia'] as String?,
      draga: (json['draga'] as num?)?.toDouble(),
      salary: (json['salary'] as num?)?.toDouble(),
      naqlBadal: (json['naqlBadal'] as num?)?.toDouble(),
      intentedabBadal: (json['intentedabBadal'] as num?)?.toDouble(),
      empType: json['empType'] as String?,
      badal1: (json['badal1'] as num?)?.toInt(),
      badal2: (json['badal2'] as num?)?.toInt(),
      badal3: (json['badal3'] as num?)?.toInt(),
      badal4: (json['badal4'] as num?)?.toInt(),
      jobBadalat: (json['jobBadalat'] as num?)?.toDouble(),
      maeesha: (json['maeesha'] as num?)?.toDouble(),
    );

Map<String, dynamic> _$EmployeeFindModelToJson(EmployeeFindModel instance) =>
    <String, dynamic>{
      'id': instance.id,
      'name': instance.name,
      'fia': instance.fia,
      'draga': instance.draga,
      'salary': instance.salary,
      'naqlBadal': instance.naqlBadal,
      'intentedabBadal': instance.intentedabBadal,
      'empType': instance.empType,
      'badal1': instance.badal1,
      'badal2': instance.badal2,
      'badal3': instance.badal3,
      'badal4': instance.badal4,
      'jobBadalat': instance.jobBadalat,
      'maeesha': instance.maeesha,
    };
